CREATE TABLE product(
    id INT NOT NULL,
    product_name VARCHAR(255) NOT NULL,
    price INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL
);

CREATE TABLE transaction_product(
    transaction_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL
);

CREATE TABLE user(
    id INT NOT NULL,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL
);

CREATE TABLE transaction(
    id INT NOT NULL,
    user_id INT NOT NULL,
    total_price INT NOT NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL
);

-----------

ALTER TABLE product
ADD CONSTRAINT PK_product
PRIMARY KEY (id);

ALTER TABLE transaction_product
ADD CONSTRAINT PK_transaction_product
PRIMARY KEY (transaction_id);

ALTER TABLE user
ADD CONSTRAINT PK_user
PRIMARY KEY (id);

ALTER TABLE transaction
ADD CONSTRAINT PK_transaction
PRIMARY KEY (id);


-------------------------

ALTER TABLE transaction_product
ADD CONSTRAINT FK_product
FOREIGN KEY (product_id)
REFERENCES product(id);

ALTER TABLE transaction_product
ADD CONSTRAINT FK_transaction
FOREIGN KEY (transaction_id)
REFERENCES transaction(id);

ALTER TABLE transaction
ADD CONSTRAINT FK_user
FOREIGN KEY (user_id)
REFERENCES user(id);


-------------------------


ALTER TABLE product
MODIFY COLUMN id INT AUTO_INCREMENT;

ALTER TABLE transaction_product
MODIFY COLUMN transaction_id INT AUTO_INCREMENT;

ALTER TABLE user
MODIFY COLUMN id INT AUTO_INCREMENT;

ALTER TABLE transaction
MODIFY COLUMN id INT AUTO_INCREMENT;


---------------------------------

ALTER TABLE transaction_product ADD FOREIGN KEY (product_id) REFERENCES product(id);

ALTER TABLE transaction_product ADD FOREIGN KEY (transaction_id) REFERENCES transaction(id);

ALTER TABLE transaction ADD FOREIGN KEY (user_id) REFERENCES user(id);

----------------------------------


Table : user

| username 	| password		| created_at 	| updated_at 	|
| andi     	| andi123		| 27/08/2022	| 28/08/2022	|
| budi	| budi_ganteng999	| 27/08/2022	| 28/08/2022	|

Table : Product

| nama	| harga		| created_at	| updated_at	|
| baju	| Rp67.000,00	| 17/08/2022	| 17/08/2022	|
| celana	| Rp86.000,00	| 18/08/2022	| 18/08/2022	|
| buku	| Rp24.000,00	| 19/08/2022	| 19/08/2022	|
| sepatu	| Rp128.000,00	| 20/08/2022	| 20/08/2022	|
| sepeda	| Rp1.500.000,00	| 21/08/2022	| 21/08/2022	|
| bola	| Rp17.000,00	| 22/08/2022	| 22/08/2022	|
| komputer	| Rp8.956.000,00	| 23/08/2022	| 23/08/2022	|
| gelas	| Rp96.400,00	| 24/08/2022	| 24/08/2022	|


Table : Transaction



-------------------

A. User

INSERT INTO user (username, password, created_at, updated_at)
VALUES ("andi", "andi123", '2022-08-27 01:00:00', '2022-08-28 01:00:00')

INSERT INTO user (username, password, created_at, updated_at)
VALUES ("budi", "budi_ganteng999", '2022-08-27 01:00:00', '2022-08-28 01:00:00')


-------------------

B. Product

INSERT INTO product (product_name, price, created_at, updated_at)
VALUES ("baju", 67000, '2022-08-17 01:00:00', '2022-08-17 01:00:00')

INSERT INTO product (product_name, price, created_at, updated_at)
VALUES ("celana", 86000, '2022-08-18 07:00:00', '2022-08-18 07:00:00') 

INSERT INTO product (product_name, price, created_at, updated_at)
VALUES ("buku", 24000, '2022-08-19 07:00:00', '2022-08-19 07:00:00') 

INSERT INTO product (product_name, price, created_at, updated_at)
VALUES ("sepatu", 128000, '2022-08-20 07:00:00', '2022-08-20 07:00:00') 

INSERT INTO product (product_name, price, created_at, updated_at)
VALUES("sepeda", 1500000, '2022-08-21 07:00:00', '2022-08-21 07:00:00')

INSERT INTO product (product_name, price, created_at, updated_at)
VALUES ("bola", 17000, '2022-08-22 07:00:00', '2022-08-22 07:00:00')

INSERT INTO product (product_name, price, created_at, updated_at)
VALUES ("komputer", 8956000, '2022-08-23 07:00:00', '2022-08-23 07:00:00')

INSERT INTO product (product_name, price, created_at, updated_at)
VALUES ("gelas", 96400, '2022-08-24 07:00:00', '2022-08-24 07:00:00')


------------------

INSERT INTO transaction_product (product_id)
VALUES (12),(13),(14),(15),(16),(17),(18),(19)

INSERT INTO transaction (user_id)
VALUES (1),(2);

-----------------

Nambah quantity transaction_product(blm/coba2)

UPDATE transaction_product SET quantity=2 WHERE product_id=12;

UPDATE transaction_product SET quantity=3 WHERE product_id=13;

UPDATE transaction_product SET quantity=1 WHERE product_id=14;

UPDATE transaction_product SET quantity=0 WHERE product_id=15;

UPDATE transaction_product SET quantity=0 WHERE product_id=16;

UPDATE transaction_product SET quantity=1 WHERE product_id=17;

UPDATE transaction_product SET quantity=2 WHERE product_id=18;

----
NAMBAH SEPATU dan CELANA
---

INSERT INTO transaction_product (product_id, quantity)
VALUES (14, 2)


INSERT INTO transaction_product (product_id, quantity)
VALUES (13, 4)


-----------------


SupportAje

Andi : baju 2
	celana 3 .
Budi : komputer 1
	sepatu 1 .
Budi : celana 4 .
	buku 4
Andi : gelas 2
	sepatu 2 .

UPDATE transaction SET user_id = 1, created_at = '2022-08-15 07:00:00', updated_at = '2022-08-15 07:00:00' WHERE total_price=134000;

UPDATE transaction SET user_id = 1, created_at = '2022-08-15 07:00:00', updated_at = '2022-08-15 07:00:00' WHERE total_price=258000;

UPDATE transaction SET user_id = 2, created_at = '2022-08-16 07:00:00', updated_at = '2022-08-16 07:00:00' WHERE total_price=128000;

UPDATE transaction SET user_id = 2, created_at = '2022-08-16 07:00:00', updated_at = '2022-08-16 07:00:00' WHERE total_price=8956000;

UPDATE transaction SET user_id = 2, created_at = '2022-08-19 07:00:00', updated_at = '2022-08-19 07:00:00' WHERE total_price=344000;

UPDATE transaction SET user_id = 2, created_at = '2022-08-19 07:00:00', updated_at = '2022-08-19 07:00:00' WHERE total_price=96000;

UPDATE transaction SET user_id = 1, created_at = '2022-08-24 07:00:00', updated_at = '2022-08-24 07:00:00' WHERE total_price=192800;

UPDATE transaction SET user_id = 1, created_at = '2022-08-24 07:00:00', updated_at = '2022-08-24 07:00:00' WHERE total_price=256000;


sql-61b0_13f_ibfk_2

------------------

SALAH : 

SELECT product.product_name, product.price, product.created_at, product.updated_at FROM product
JOIN transaction_product ON product.id = transaction.product_id;

SELECT product.product_name, product.price, product.created_at, product.updated_at FROM product
JOIN product ON transaction.product_id = product_id;


-----------

JOIN BERHASIL

SELECT product.product_name, product.price, product.created_at, product.updated_at FROM product 
JOIN transaction_product ON product_id = product.id;

SELECT user.username, user.password FROM user 
JOIN transaction ON user_id = user.id;

SELECT transaction.total_price FROM transaction 
JOIN transaction_product ON transaction_id = transaction.id;


---------------
Inner Join

SELECT s.studentname
    , s.studentid
    , s.studentdesc
    , h.hallname
FROM students s
INNER JOIN hallprefs hp
    on s.studentid = hp.studentid
INNER JOIN halls h
    on hp.hallid = h.hallid

------draft

SELECT product.product_name, product.price, pt.p_name, st.s_name, tt.t_name, xt.x_name
FROM master mt

SELECT * FROM ms_item_warna
INNER JOIN ms_item_kategori
ON ms_item_warna.nama_barang = ms_item_kategori.nama_item;

SELECT * FROM tr_penjualan;
SELECT * FROM ms_produk;
SELECT * FROM tr_penjualan
INNER JOIN ms_produk
ON tr_penjualan.kode_produk = ms_produk.kode_produk;

SELECT kode_pelanggan, nama_produk, qty, harga, harga*qty AS total 
FROM tr_penjualan 
ORDER BY total DESC

SELECT SUM(pp) AS total_nilai FROM nilai WHERE nama_siswa = "Michael";

INSERT INTO transaction (user_id, total_price)
VALUES (1, 2);

    SELECT siswa.nama,mata_pelajaran.nama, nilai_mata_pelajaran.nilai_angka
    FROM ((siswa INNER JOIN nilai_mata_pelajaran ON siswa.id=nilai_mata_pelajaran.id_siswa)
    INNER JOIN mata_pelajaran ON nilai_mata_pelajaran.id_mata_pelajaran=mata_pelajaran.id);

INSERT INTO table_name(PRICE, QUANTITE, TOTAL)
    SELECT price, quantite, price * quantite
    FROM (SELECT 4800 as Price, 3 as Quantite) t;

UPDATE transaction_product SET quantity = '1' WHERE id = any(Select transaction_product.id from
 user 
 JOIN transaction ON user.id = transaction.user_id
 JOIN transaction_product ON transaction.id = transaction_product.transaction_id
 JOIN product ON product.id = transaction_product.product_id
 WHERE user.username = 'andi' AND product.product_name = 'gelas');



transaction_ibfk_1

------
One step closer

SELECT product.product_name, transaction_product.quantity, product.price, product.price*transaction_product.quantity FROM product INNER JOIN transaction_product ON product.id = transaction_product.product_id;



-------

INNER JOIN (Betul)

SELECT price FROM product
INNER JOIN transaction_product
ON product.id = transaction_product.product_id;


----

INPUT PRICE TOTAL

INSERT INTO transaction(total_price)
SELECT product.price*transaction_product.quantity FROM product INNER JOIN transaction_product ON product.id = transaction_product.product_id;


-------

Rubah gelas dari 2 ke 1

UPDATE transaction_product
SET quantity = REPLACE (quantity,2, 1)
WHERE product_id = 18;

------

hapus harga terendah

SET FOREIGN_KEY_CHECKS=0;
DELETE FROM `product` 
WHERE price = (
    SELECT MIN(price)
    FROM `product`
);

----

Paginasi


SELECT * FROM `product` WHERE price > 50000 LIMIT 2, 3;


----

total transaksi

SELECT user.username, SUM(transaction.total_price) 
as total_shopping FROM user LEFT JOIN transaction
ON user.id = transaction.user_id 
GROUP BY user.username;


----

total pembelian barang diurutkan

SELECT product_name, sum(quantity) AS total FROM transaction_product 
JOIN product ON transaction_product.product_id = product.id
 GROUP BY product_name ORDER BY total desc;



---most-helpful : https://codepolitan.com/blog/menambahkan-foreign-key-pada-tabel-di-mysql-588422ebb015c